apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis.name" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.openshift.io/runtime: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{ include "redis.name" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}" 
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 6379
          timeoutSeconds: 1
        name: redis
        ports:
        - containerPort: 6379
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            memory: {{ .Values.memory_limit }}
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/redis/data
          name: {{ include "redis.name" . }}-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: {{ include "redis.name" . }}-data
        persistentVolumeClaim:
          claimName: {{ include "redis.name" . }}